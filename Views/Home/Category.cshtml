@{
    ViewData["Title"] = "Category";
}
<style>
    .required::after {
        content: " *";
        color: red;
    }

    .d-none {
        display: none;
    }

</style>

<div class="d-flex align-items-center mb-3" style="margin: 0px 40px 0px 20px;">
    <div class="col-sm-9">
    </div>

    <div class="col-sm-3" style="padding-left: 60px;">
        <button id="addNewButton"
                class="btn btn-primary ml-auto"
                onclick="addNew()"
                style="margin-left: auto;">
            Tạo mới
        </button>
    </div>
</div>

<div class="container" style="margin: 0px 40px 0px 20px;">
    <div class="row align-items-center">
       
        <div class="col-sm-9">
            <input type="text"
                   id="searchInput"
                   class="form-control"
                   placeholder="Nhập từ khóa tìm kiếm..." />
        </div>
        <div class="col-sm-3 text-right">
            <button id="searchButton"
                    class="btn btn-primary"
                    onclick="searchCategory()">
                Tìm kiếm
            </button>
        </div>
    </div>
</div>


<div id="categoryTable" style="background-color: white; border-radius: 5px; margin: 0px 40px 0px 20px">
    <div class="body" style="padding: 20px">
        <table id="categoryList" class="table table-hover">
            <thead style="background-color: #E9ECF3;">
                <tr>
                    <th style="width: 10%">ID</th>
                    <th style="width: 30%">Tên</th>
                    <th style="width: 25%">Số lượng</th>
                    <th style="width: 25%">Ngày nhập </th>
                    <th style="width: 10%">Chức năng</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div id="pagination-section" class="d-flex justify-content-between" style="background-color: #FFFFFF; padding: 24px; border-radius: 0px 0px 16px 16px; height: calc(63vh - 54vh); display: flex; justify-content: space-between">

        <span class="d-flex align-items-center"><span class="js-total mx-1" style="display: flex; align-items: center"></span></span>
        <nav class="d-flex align-items-center " aria-label="Page navigation example" style="display: flex; align-items: center">
            <span class="mr-3">Số loại/trang</span>
            <select style="border: 0; border-bottom: 1px solid #999999; margin-right: 20px" class="mr-3 js-page-size">
                <option value="10">10</option>
                <option value="15">15</option>
                <option value="30">30</option>
            </select>

            <ul style="margin: 0;" class="pagination">
                <li class="page-item js-first disabled">
                    <a class="page-link d-flex flex-column h-100 justify-content-center" href="#" aria-label="First">
                        <img src="~/img/pagination/first-page.svg" />
                    </a>
                </li>
                <li class="page-item js-previous disabled">
                    <a class="page-link d-flex flex-column h-100 justify-content-center" href="#" aria-label="Previous">
                        <img src="~/img/pagination/previous-page.svg" />
                    </a>
                </li>
                <li class="page-item"><a class="page-link js-current-page" style="color: black;" href="#">1</a></li>
                <li class="page-item d-flex flex-column h-100 justify-content-center js-next">
                    <a class="page-link" href="#" aria-label="Next">
                        <img src="~/img/pagination/next-page.svg" />
                    </a>
                </li>
                <li class="page-item d-flex flex-column h-100 justify-content-center js-last">
                    <a class="page-link" href="#" aria-label="Latest">
                        <img src="~/img/pagination/latest-page.svg" />
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>


<div class="modal fade" role="dialog" id="addNewCategoryModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #4CAF50; color: white;">
                <h5 class="modal-title" style="font-weight: 700;">Thêm mới loại sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="form-group row p-2">
                    <label for="categoryName" class="col-sm-3 col-form-label required">Tên loại sản phẩm:</label>
                    <div class="col-sm-9">
                        <input type="text" id="categoryName" class="form-control" placeholder="Nhập tên loại sản phẩm" required>
                        <div id="categoryNameInvalidId" style="color: red" class="invalid-fb d-none">Vui lòng nhập tên loại sản phẩm!</div>
                    </div>
                </div>
                
                <div class="form-group row p-2">
                    <label for="categoryDate" class="col-sm-3 col-form-label required">Ngày nhập:</label>
                    <div class="col-sm-9">
                        <input type="date" id="categoryDate" class="form-control" placeholder="Chọn ngày nhập" required>
                        <div id="categoryDateInvalidId" style="color: red" class="invalid-fb d-none">Vui lòng chọn ngày nhập!</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="saveCategory()">Lưu</button>
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" role="dialog" id="updateCategoryModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #4CAF50; color: white;">
                <h5 class="modal-title" style="font-weight: 700;">Sửa thông tin loại sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="form-group row p-2">
                    <label for="updateName" class="col-sm-3 col-form-label required">Tên loại sản phẩm:</label>
                    <div class="col-sm-9">
                        <input type="text" id="updateName" class="form-control" placeholder="Nhập tên loại sản phẩm" required>
                        <div id="updateNameInvalidId" style="color: red" class="invalid-fb d-none">Vui lòng nhập tên loại sản phẩm!</div>
                    </div>
                </div>
                
                <div class="form-group row p-2">
                    <label for="updateDate" class="col-sm-3 col-form-label required">Ngày nhập:</label>
                    <div class="col-sm-9">
                        <input type="date" id="updateDate" class="form-control" placeholder="Chọn ngày nhập" required>
                        <div id="updateDateInvalidId" style="color: red" class="invalid-fb d-none">Vui lòng chọn ngày nhập!</div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="updateCategory()">Sửa</button>
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>


<script>
    var totalRecords = 0;
    var totalPages = 0;
    var pageSize = 10;
    var pageIndex = 1;
    var keySearch = '';
    var categoryId;


    function loadCateGories(pageIndex, pageSize, keySearch) {
        $.ajax({
            url: '/api/categories?pageIndex=' + pageIndex + '&pageSize=' + pageSize + '&keySearch=' + keySearch,
            type: 'GET',
            success: function (response) {
                var categories = JSON.parse(response.data);

                var rows = '';
                categories.forEach(function(category) {
                    rows += `
                        <tr>
                            <td>${category.Id}</td>
                            <td>${category.Name}</td>
                            <td>${category.ProductCount}</td>
                            <td>${new Date(category.Created).toLocaleDateString()}</td>
                            <td>
                                <button onclick="editCategory(${category.Id}, '${category.Name}','${category.Created}')">Sửa</button>
                                <button onclick="deleteCategory(${category.Id}, ${category.ProductCount})">Xóa</button>
                            </td>
                        </tr>
                    `;
                });

                $('#categoryTable tbody').html(rows);

                totalRecords = response.recordsTotal;
                totalPages = Math.ceil(totalRecords / pageSize);
                $('.js-total').text("Tổng số: " + totalRecords + " loại sản phẩm");
            },
            error: function (xhr) {
                alert('Lỗi khi tải dữ liệu: ' + xhr.responseText);
            }
        });
    }

    function searchCategory() {
        var keySearchChange = $('#searchInput').val()?.trim();

        if (keySearchChange !== keySearch || keySearchChange == '' ) {
            pageIndex = 1;
            $(".js-current-page").text(pageIndex);
            loadCateGories(pageIndex, pageSize, keySearchChange);
        }
    }

    function addNew(){
        $('#categoryName').val('');
        $('#categoryDate').val('');

        $('#categoryNameInvalidId').addClass('d-none');
        $('#categoryDateInvalidId').addClass('d-none');

        $("#addNewCategoryModal").modal('show');
    }

    function saveCategory() {
        if(!validateFormAdd()){
            return;
        }

        var categoryName = $('#categoryName').val();
        var categoryDate = $('#categoryDate').val();

        $.ajax({
            url: '/api/categories/addNew?name=' + categoryName + '&date=' + categoryDate,
            type: 'POST',
            success: function (response) {
                alert("Thêm mới thành công!")
                window.location.reload();

            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });
    }

    function validateFormAdd() {
        let isValid = true;

        if ($('#categoryName').val().trim() === '') {
            $('#categoryNameInvalidId').removeClass('d-none');
            isValid = false;
        } else {
            $('#categoryNameInvalidId').addClass('d-none');
        }

        var categoryDate = $('#categoryDate').val().trim();
        var currentDate = new Date().toISOString().split('T')[0];
        if (categoryDate === '') {
            $('#categoryDateInvalidId').text('Vui lòng chọn ngày nhập!');
            $('#categoryDateInvalidId').removeClass('d-none');
            isValid = false;
        } else if (categoryDate > currentDate) {
            $('#categoryDateInvalidId').text('Ngày nhập không được lớn hơn ngày hiện tại!');
            $('#categoryDateInvalidId').removeClass('d-none');
            isValid = false;
        } else {
            $('#categoryDateInvalidId').addClass('d-none');
        }

        return isValid;
    }


    function editCategory(id, name, date){
        $('#updateNameInvalidId').addClass('d-none');
        $('#updateDateInvalidId').addClass('d-none');

        categoryId = id;
        $('#updateName').val(name);
        var formattedDate = date.split('T')[0];
        $('#updateDate').val(formattedDate);

        $("#updateCategoryModal").modal('show');
    }

    function updateCategory(){
        if(!validateFormUpdate()) {
            return;
        }

        var updateName = $('#updateName').val();
        var updateDate = $('#updateDate').val();

        $.ajax({
            url: '/api/categories/update?id='+ categoryId +'&name=' + updateName + '&date=' + updateDate,
            type: 'PUT',
            success: function (response) {
                alert("Chỉnh sửa thành công!")
                window.location.reload();

            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });
    }

    function validateFormUpdate() {
        let isValid = true;

        if ($('#updateName').val().trim() === '') {
            $('#updateNameInvalidId').removeClass('d-none');
            isValid = false;
        } else {
            $('#updateNameInvalidId').addClass('d-none');
        }

        var updateDate = $('#updateDate').val().trim();
        var currentDate = new Date().toISOString().split('T')[0];
        if (updateDate === '') {
            $('#updateDateInvalidId').text('Vui lòng chọn ngày nhập!');
            $('#updateDateInvalidId').removeClass('d-none');
            isValid = false;
        } else if (updateDate > currentDate) {
            $('#updateDateInvalidId').text('Ngày nhập không được lớn hơn ngày hiện tại!');
            $('#updateDateInvalidId').removeClass('d-none');
            isValid = false;
        } else {
            $('#updateDateInvalidId').addClass('d-none');
        }

        return isValid;
    }

    function deleteCategory(categoryId, productCount) {
        if(productCount > 0){
            alert("Không thể xóa loại sản phẩm vì còn tồn sản phẩm");
            return;
        }
        if (confirm('Bạn có chắc muốn xóa loại sản phẩm này?')) {
            $.ajax({
                url: '/api/categories/delete?id=' + categoryId,
                type: 'DELETE',
                success: function () {
                    alert('Xóa loại sản phẩm thành công.');
                    location.reload();
                },
                error: function (xhr) {
                    alert('Lỗi khi loại xóa sản phẩm: ' + xhr.responseText);
                }
            });
        }
    }

    $(document).ready(function () {

        $('.js-page-size').change(function () {
            var $option = $(this).find('option:selected');
            pageSize = $option.attr('value');
            pageIndex = 1;
            $(".js-current-page").text(pageIndex);

            keySearch = $('#searchInput').val()?.trim();

            loadCateGories(pageIndex, pageSize, keySearch);
        })

        $(".js-first").click(function () {
            pageIndex = 1;
            $(".js-current-page").text(pageIndex);
            $(".js-previous").addClass("disabled");
            $(".js-first").addClass("disabled");
            $(".js-next").removeClass("disabled");
            $(".js-last").removeClass("disabled");

            keySearch = $('#searchInput').val()?.trim();
            loadCateGories(pageIndex, pageSize, keySearch);
        });

        $(".js-last").click(function () {
            if (totalPages <= 0) {
                return;
            }

            pageIndex = totalPages;
            $(".js-current-page").text(pageIndex);
            $(".js-next").addClass("disabled");
            $(".js-last").addClass("disabled");
            $(".js-previous").removeClass("disabled");
            $(".js-first").removeClass("disabled");

            keySearch = $('#searchInput').val()?.trim();
            loadCateGories(pageIndex, pageSize, keySearch);

        });

        $(".js-next").click(function () {
            if (pageIndex == totalPages) {
                return;
            }
            $(".js-previous").removeClass("disabled");
            $(".js-first").removeClass("disabled");
            pageIndex++;
            if (pageIndex == totalPages) {
                $(".js-next").addClass("disabled");
                $(".js-last").addClass("disabled");
            }
            $(".js-current-page").text(pageIndex);

            keySearch = $('#searchInput').val()?.trim();
            loadCateGories(pageIndex, pageSize, keySearch);


        });

        $(".js-previous").click(function () {
            if (pageIndex <= 1) {
                return;
            }
            $(".js-next").removeClass("disabled");
            $(".js-last").removeClass("disabled");
            pageIndex--;
            if (pageIndex == 1) {
                $(".js-previous").addClass("disabled");
                $(".js-first").addClass("disabled");
            }
            $(".js-current-page").text(pageIndex);

            keySearch = $('#searchInput').val()?.trim();
            loadCateGories(pageIndex, pageSize, keySearch);

        });
        loadCateGories(pageIndex, pageSize, keySearch);

    });


</script>
